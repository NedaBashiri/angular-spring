{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class FillterPipe {\n  transform(value, fstring, pop) {\n    if (value.length === 0 || fstring === '') {\n      return null;\n    }\n    const tempArray = [];\n    for (;;);\n  }\n}\nFillterPipe.ɵfac = function FillterPipe_Factory(t) {\n  return new (t || FillterPipe)();\n};\nFillterPipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n  name: \"fillter\",\n  type: FillterPipe,\n  pure: true\n});","map":{"version":3,"mappings":";AAKA,OAAM,MAAOA,WAAW;EAEtBC,SAAS,CAACC,KAAU,EAAEC,OAAc,EAAEC,GAAU;IAC9C,IAAGF,KAAK,CAACG,MAAM,KAAI,CAAC,IAAIF,OAAO,KAAG,EAAE,EAAC;MACnC,OAAO,IAAI;;IAEb,MAAMG,SAAS,GAAG,EAAE;IACpB,QACF;EAAA;;AARWN,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;;QAAXA,WAAW;EAAAO;AAAA","names":["FillterPipe","transform","value","fstring","pop","length","tempArray","pure"],"sourceRoot":"","sources":["G:\\Programming\\Angular\\project\\Angular4\\37-pip1\\form1\\src\\app\\fillter.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'fillter'\n})\nexport class FillterPipe implements PipeTransform {\n\n  transform(value: any, fstring:string, pop:string): any {\n    if(value.length ===0 || fstring===''){\n      return null\n    }\n    const tempArray = [];\n    for ()\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}